// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
        //url production:
  //url = "postgresql://postgres:postgres@localhost:5432/test_app?schema=public"
        //url teste:
  //url = "postgresql://postgres:postgres@localhost:5432/test_test_app?schema=public"
      // from .env
  url = env("DATABASE_URL")
}

// Modelling! =========================================>
// One User might have Many Todos
// Many todos might be sub-task from one todo
// npx prisma generate
// npx prisma db push
// npx prisma migrate dev
  // This command MIGHT reset your database... be cautious.
    // For some unknown reasons, if you use the flag --name <name> it forces you to reset it!
  // npx prisma migrate reset
    // Regenerate your database schema (data is not included, tho)


// Nao usar maiusculas... o database nao curte.

model users {
  id    Int       @id @default(autoincrement())
  name  String    @db.VarChar(150)
  email String?   @db.VarChar(100) @unique
  birth DateTime?     
  todos todos[]
}

model todos {
  id              Int       @id   @default(autoincrement())
  user            users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id         Int
  todo            todos?    @relation("todo_inter_dependent_tree",fields: [todo_parent_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  todo_parent_id  Int?
  todos           todos[]   @relation("todo_inter_dependent_tree")
  name            String    @db.VarChar(50)
  description     String?   @db.VarChar(255)  
  completed       Boolean   @default(false)
}

// Settup do database postgres
// Instalar postgres desktop
// sudo -u postgres psql
  // psql eh o front cli do postgres
// \conninfo
// \l 
  // mostra todos os bancos de dados
// create database teste;
// \c teste
  // se conecta no database teste
// \dt
  // olha os bancos de dados
// \?
  // Ajuda
// table <nome da tabela>;
// insert into table_name(colummn) values ('valores String');
